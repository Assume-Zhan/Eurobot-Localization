<launch>

	<arg name="robot_name" default=""/>
	<arg name="robot_name_slash" default=""/>

    <group ns="$(arg robot_name)">

        <!-- Local filter by robot localization -->
        <node pkg="robot_localization" type="ekf_localization_node" name="ekf_velocity" clear_params="true">
            <!-- <param name="tf_prefix" value="Tera" /> -->
            <rosparam command="load" file="$(find local_filter)/param/local_filter.yaml" />
            <remap from="odometry/filtered" to="global_filter" />
            <remap from="set_pose" to="initialpose" />
            <remap from="/diagnostics" to="~diagnostics" />
            <remap from="/odom" to="$(arg robot_name)/odom"/>
            <remap from="/imu/data_cov" to="$(arg robot_name)/imu/data_cov"/>

            <param name="map_frame" value="$(arg robot_name_slash)map"/>
            <param name="odom_frame" value="$(arg robot_name_slash)odom"/>
            <param name="base_link_frame" value="$(arg robot_name_slash)base_footprint"/>
            <param name="world_frame" value="$(arg robot_name_slash)odom"/>
        </node>

        <!-- Odometry firmware and covariance feedback loop node (contain communication) -->
        <include file="$(find odometry)/launch/odometry.launch">
            <arg name="robot_name" value="$(arg robot_name)"/>
            <arg name="robot_name_slash" value="$(arg robot_name_slash)"/>
        </include>

        <!-- IMU firmware and covariance feedback loop node (contain IMU spatial launch) -->
        <include file="$(find imu_drive)/launch/imu_drive_firm.launch">
            <arg name="robot_name" value="$(arg robot_name)"/>
            <arg name="robot_name_slash" value="$(arg robot_name_slash)"/>
        </include>
    </group>

</launch>
